{
  "D:\\DTCC\\AIStudio\\serverless.yml": {
    "versionFramework": "4.17.0",
    "servicePath": "D:\\DTCC\\AIStudio\\serverless.yml",
    "serviceConfigFileName": "serverless.yml",
    "service": {
      "org": "ngocompliance",
      "app": "compliance-analyzer-api",
      "service": "compliance-analyzer-api",
      "frameworkVersion": "4",
      "provider": {
        "name": "aws",
        "runtime": "python3.9",
        "region": "us-east-2",
        "profile": "hackathon-sso",
        "httpApi": {
          "cors": true
        },
        "role": "arn:aws:iam::144274058030:role/MyNgoComplianceLambdaRole",
        "stage": "dev",
        "versionFunctions": true,
        "compiledCloudFormationTemplate": {
          "AWSTemplateFormatVersion": "2010-09-09",
          "Description": "The AWS CloudFormation template for this Serverless application",
          "Resources": {
            "AnalyzeLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/compliance-analyzer-api-dev-analyze"
              }
            },
            "AnalyzeLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-us-east-2-426aa2c2-e6a5",
                  "S3Key": "serverless/compliance-analyzer-api/dev/1749582592811-2025-06-10T19:09:52.811Z/compliance-analyzer-api.zip"
                },
                "Handler": "handler.analyze",
                "Runtime": "python3.9",
                "FunctionName": "compliance-analyzer-api-dev-analyze",
                "MemorySize": 1024,
                "Timeout": 30,
                "Role": "arn:aws:iam::144274058030:role/MyNgoComplianceLambdaRole"
              },
              "DependsOn": [
                "AnalyzeLogGroup"
              ]
            },
            "AnalyzeLambdaVersion1HNTILUkHTZYj3EJVYm9G7aqtNIKMgSI9bcXdL5sdw": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "AnalyzeLambdaFunction"
                },
                "CodeSha256": "5Hn3iEkMDJFk5Gbnj0ZsAIdb85k98myA4g8e4GTYe8o="
              }
            },
            "HttpApi": {
              "Type": "AWS::ApiGatewayV2::Api",
              "Properties": {
                "Name": "dev-compliance-analyzer-api",
                "ProtocolType": "HTTP",
                "CorsConfiguration": {
                  "AllowCredentials": "<REDACTED>",
                  "AllowHeaders": [
                    "Content-Type",
                    "X-Amz-Date",
                    "Authorization",
                    "X-Api-Key",
                    "X-Amz-Security-Token",
                    "X-Amz-User-Agent",
                    "X-Amzn-Trace-Id"
                  ],
                  "AllowMethods": [
                    "OPTIONS",
                    "POST"
                  ],
                  "AllowOrigins": [
                    "*"
                  ]
                }
              }
            },
            "HttpApiStage": {
              "Type": "AWS::ApiGatewayV2::Stage",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "StageName": "$default",
                "AutoDeploy": true,
                "DefaultRouteSettings": {
                  "DetailedMetricsEnabled": false
                }
              }
            },
            "AnalyzeLambdaPermissionHttpApi": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "AnalyzeLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "HttpApi"
                      },
                      "/*"
                    ]
                  ]
                }
              }
            },
            "HttpApiIntegrationAnalyze": {
              "Type": "AWS::ApiGatewayV2::Integration",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "IntegrationType": "AWS_PROXY",
                "IntegrationUri": {
                  "Fn::GetAtt": [
                    "AnalyzeLambdaFunction",
                    "Arn"
                  ]
                },
                "PayloadFormatVersion": "2.0",
                "TimeoutInMillis": 30000
              }
            },
            "HttpApiRoutePostAnalyze": {
              "Type": "AWS::ApiGatewayV2::Route",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "RouteKey": "POST /analyze",
                "Target": {
                  "Fn::Join": [
                    "/",
                    [
                      "integrations",
                      {
                        "Ref": "HttpApiIntegrationAnalyze"
                      }
                    ]
                  ]
                }
              },
              "DependsOn": "HttpApiIntegrationAnalyze"
            }
          },
          "Outputs": {
            "ServerlessDeploymentBucketName": {
              "Value": "serverless-framework-deployments-us-east-2-426aa2c2-e6a5",
              "Export": {
                "Name": "sls-compliance-analyzer-api-dev-ServerlessDeploymentBucketName"
              }
            },
            "AnalyzeLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "AnalyzeLambdaVersion1HNTILUkHTZYj3EJVYm9G7aqtNIKMgSI9bcXdL5sdw"
              },
              "Export": {
                "Name": "sls-compliance-analyzer-api-dev-AnalyzeLambdaFunctionQualifiedArn"
              }
            },
            "HttpApiId": {
              "Description": "Id of the HTTP API",
              "Value": {
                "Ref": "HttpApi"
              },
              "Export": {
                "Name": "sls-compliance-analyzer-api-dev-HttpApiId"
              }
            },
            "HttpApiUrl": {
              "Description": "URL of the HTTP API",
              "Value": {
                "Fn::Join": [
                  "",
                  [
                    "https://",
                    {
                      "Ref": "HttpApi"
                    },
                    ".execute-api.",
                    {
                      "Ref": "AWS::Region"
                    },
                    ".",
                    {
                      "Ref": "AWS::URLSuffix"
                    }
                  ]
                ]
              },
              "Export": {
                "Name": "sls-compliance-analyzer-api-dev-HttpApiUrl"
              }
            }
          }
        },
        "vpc": {}
      },
      "functions": {
        "analyze": {
          "handler": "handler.analyze",
          "timeout": 30,
          "events": [
            {
              "httpApi": {
                "path": "/analyze",
                "method": "post",
                "payload": "1.0"
              },
              "resolvedMethod": "POST",
              "resolvedPath": "/analyze"
            }
          ],
          "name": "compliance-analyzer-api-dev-analyze",
          "package": {},
          "memory": 1024,
          "runtime": "python3.9",
          "vpc": {},
          "versionLogicalId": "AnalyzeLambdaVersion1HNTILUkHTZYj3EJVYm9G7aqtNIKMgSI9bcXdL5sdw"
        }
      }
    },
    "provider": {
      "name": "aws",
      "runtime": "python3.9",
      "region": "us-east-2",
      "profile": "hackathon-sso",
      "httpApi": {
        "cors": true
      },
      "role": "arn:aws:iam::144274058030:role/MyNgoComplianceLambdaRole",
      "stage": "dev",
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "AnalyzeLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/compliance-analyzer-api-dev-analyze"
            }
          },
          "AnalyzeLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-2-426aa2c2-e6a5",
                "S3Key": "serverless/compliance-analyzer-api/dev/1749582592811-2025-06-10T19:09:52.811Z/compliance-analyzer-api.zip"
              },
              "Handler": "handler.analyze",
              "Runtime": "python3.9",
              "FunctionName": "compliance-analyzer-api-dev-analyze",
              "MemorySize": 1024,
              "Timeout": 30,
              "Role": "arn:aws:iam::144274058030:role/MyNgoComplianceLambdaRole"
            },
            "DependsOn": [
              "AnalyzeLogGroup"
            ]
          },
          "AnalyzeLambdaVersion1HNTILUkHTZYj3EJVYm9G7aqtNIKMgSI9bcXdL5sdw": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "AnalyzeLambdaFunction"
              },
              "CodeSha256": "5Hn3iEkMDJFk5Gbnj0ZsAIdb85k98myA4g8e4GTYe8o="
            }
          },
          "HttpApi": {
            "Type": "AWS::ApiGatewayV2::Api",
            "Properties": {
              "Name": "dev-compliance-analyzer-api",
              "ProtocolType": "HTTP",
              "CorsConfiguration": {
                "AllowCredentials": "<REDACTED>",
                "AllowHeaders": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent",
                  "X-Amzn-Trace-Id"
                ],
                "AllowMethods": [
                  "OPTIONS",
                  "POST"
                ],
                "AllowOrigins": [
                  "*"
                ]
              }
            }
          },
          "HttpApiStage": {
            "Type": "AWS::ApiGatewayV2::Stage",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "StageName": "$default",
              "AutoDeploy": true,
              "DefaultRouteSettings": {
                "DetailedMetricsEnabled": false
              }
            }
          },
          "AnalyzeLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "AnalyzeLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationAnalyze": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "Fn::GetAtt": [
                  "AnalyzeLambdaFunction",
                  "Arn"
                ]
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRoutePostAnalyze": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "POST /analyze",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationAnalyze"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationAnalyze"
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": "serverless-framework-deployments-us-east-2-426aa2c2-e6a5",
            "Export": {
              "Name": "sls-compliance-analyzer-api-dev-ServerlessDeploymentBucketName"
            }
          },
          "AnalyzeLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "AnalyzeLambdaVersion1HNTILUkHTZYj3EJVYm9G7aqtNIKMgSI9bcXdL5sdw"
            },
            "Export": {
              "Name": "sls-compliance-analyzer-api-dev-AnalyzeLambdaFunctionQualifiedArn"
            }
          },
          "HttpApiId": {
            "Description": "Id of the HTTP API",
            "Value": {
              "Ref": "HttpApi"
            },
            "Export": {
              "Name": "sls-compliance-analyzer-api-dev-HttpApiId"
            }
          },
          "HttpApiUrl": {
            "Description": "URL of the HTTP API",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "HttpApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  }
                ]
              ]
            },
            "Export": {
              "Name": "sls-compliance-analyzer-api-dev-HttpApiUrl"
            }
          }
        }
      },
      "vpc": {}
    },
    "dashboard": {
      "isEnabledForService": true,
      "requiredAuthentication": false,
      "orgFeaturesInUse": {
        "providers": false,
        "monitoring": true
      },
      "orgObservabilityIntegrations": [
        {
          "integrationId": "h41U3QmCjvsxtK5QjKCdx9",
          "awsAccountId": "144274058030",
          "status": "settingup"
        }
      ],
      "serviceAppId": "cHHymDJQHy91kBMn2V",
      "serviceProvider": null,
      "instanceParameters": null
    },
    "serviceRawFile": "org: ngocompliance\r\napp: compliance-analyzer-api\r\n# ... NEW, CORRECT VERSION ...\r\nservice: compliance-analyzer-api\r\nframeworkVersion: '4' # Since you downgraded to V3\r\n\r\nprovider:\r\n  name: aws\r\n  runtime: python3.9\r\n  region: us-east-2 # <-- CHANGE TO us-east-2\r\n  profile: hackathon-sso\r\n  httpApi: # <--- Add this new top-level block\r\n    cors: true\r\n  role: arn:aws:iam::144274058030:role/MyNgoComplianceLambdaRole\r\n\r\nfunctions:\r\n  analyze:\r\n    handler: handler.analyze\r\n    timeout: 30 \r\n    events:\r\n      - httpApi:\r\n          path: /analyze\r\n          method: post\r\n          payload: '1.0' # <-- ADD THIS LINE",
    "command": [
      "deploy"
    ],
    "options": {
      "aws-profile": "hackathon-sso",
      "region": "us-east-2"
    },
    "orgId": "bc82fb19-1bc9-49d1-98de-06e5787c1235",
    "orgName": "ngocompliance",
    "userId": "ByNbL4tjWwBtzqDYLZ",
    "userName": "ngocompliance",
    "serviceProviderAwsAccountId": "144274058030",
    "serviceProviderAwsCfStackName": "compliance-analyzer-api-dev",
    "serviceProviderAwsCfStackId": "arn:aws:cloudformation:us-east-2:144274058030:stack/compliance-analyzer-api-dev/6d68f260-45ef-11f0-8aff-0a401fa9c27b",
    "serviceProviderAwsCfStackCreated": "2025-06-10T11:38:28.511Z",
    "serviceProviderAwsCfStackUpdated": "2025-06-10T19:04:02.065Z",
    "serviceProviderAwsCfStackStatus": "UPDATE_COMPLETE",
    "serviceProviderAwsCfStackOutputs": [
      {
        "OutputKey": "HttpApiId",
        "OutputValue": "6p5gwei8hj",
        "Description": "Id of the HTTP API",
        "ExportName": "sls-compliance-analyzer-api-dev-HttpApiId"
      },
      {
        "OutputKey": "AnalyzeLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-2:144274058030:function:compliance-analyzer-api-dev-analyze:13",
        "Description": "Current Lambda function version",
        "ExportName": "sls-compliance-analyzer-api-dev-AnalyzeLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "ServerlessDeploymentBucketName",
        "OutputValue": "serverless-framework-deployments-us-east-2-426aa2c2-e6a5",
        "ExportName": "sls-compliance-analyzer-api-dev-ServerlessDeploymentBucketName"
      },
      {
        "OutputKey": "HttpApiUrl",
        "OutputValue": "https://6p5gwei8hj.execute-api.us-east-2.amazonaws.com",
        "Description": "URL of the HTTP API",
        "ExportName": "sls-compliance-analyzer-api-dev-HttpApiUrl"
      }
    ],
    "compiledCloudFormationTemplate": {
      "AWSTemplateFormatVersion": "2010-09-09",
      "Description": "The AWS CloudFormation template for this Serverless application",
      "Resources": {
        "AnalyzeLogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/compliance-analyzer-api-dev-analyze"
          }
        },
        "AnalyzeLambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "serverless-framework-deployments-us-east-2-426aa2c2-e6a5",
              "S3Key": "serverless/compliance-analyzer-api/dev/1749582592811-2025-06-10T19:09:52.811Z/compliance-analyzer-api.zip"
            },
            "Handler": "handler.analyze",
            "Runtime": "python3.9",
            "FunctionName": "compliance-analyzer-api-dev-analyze",
            "MemorySize": 1024,
            "Timeout": 30,
            "Role": "arn:aws:iam::144274058030:role/MyNgoComplianceLambdaRole"
          },
          "DependsOn": [
            "AnalyzeLogGroup"
          ]
        },
        "AnalyzeLambdaVersion1HNTILUkHTZYj3EJVYm9G7aqtNIKMgSI9bcXdL5sdw": {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties": {
            "FunctionName": {
              "Ref": "AnalyzeLambdaFunction"
            },
            "CodeSha256": "5Hn3iEkMDJFk5Gbnj0ZsAIdb85k98myA4g8e4GTYe8o="
          }
        },
        "HttpApi": {
          "Type": "AWS::ApiGatewayV2::Api",
          "Properties": {
            "Name": "dev-compliance-analyzer-api",
            "ProtocolType": "HTTP",
            "CorsConfiguration": {
              "AllowHeaders": [
                "Content-Type",
                "X-Amz-Date",
                "Authorization",
                "X-Api-Key",
                "X-Amz-Security-Token",
                "X-Amz-User-Agent",
                "X-Amzn-Trace-Id"
              ],
              "AllowMethods": [
                "OPTIONS",
                "POST"
              ],
              "AllowOrigins": [
                "*"
              ]
            }
          }
        },
        "HttpApiStage": {
          "Type": "AWS::ApiGatewayV2::Stage",
          "Properties": {
            "ApiId": {
              "Ref": "HttpApi"
            },
            "StageName": "$default",
            "AutoDeploy": true,
            "DefaultRouteSettings": {
              "DetailedMetricsEnabled": false
            }
          }
        },
        "AnalyzeLambdaPermissionHttpApi": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName": {
              "Fn::GetAtt": [
                "AnalyzeLambdaFunction",
                "Arn"
              ]
            },
            "Action": "lambda:InvokeFunction",
            "Principal": "apigateway.amazonaws.com",
            "SourceArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":execute-api:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":",
                  {
                    "Ref": "HttpApi"
                  },
                  "/*"
                ]
              ]
            }
          }
        },
        "HttpApiIntegrationAnalyze": {
          "Type": "AWS::ApiGatewayV2::Integration",
          "Properties": {
            "ApiId": {
              "Ref": "HttpApi"
            },
            "IntegrationType": "AWS_PROXY",
            "IntegrationUri": {
              "Fn::GetAtt": [
                "AnalyzeLambdaFunction",
                "Arn"
              ]
            },
            "PayloadFormatVersion": "2.0",
            "TimeoutInMillis": 30000
          }
        },
        "HttpApiRoutePostAnalyze": {
          "Type": "AWS::ApiGatewayV2::Route",
          "Properties": {
            "ApiId": {
              "Ref": "HttpApi"
            },
            "RouteKey": "POST /analyze",
            "Target": {
              "Fn::Join": [
                "/",
                [
                  "integrations",
                  {
                    "Ref": "HttpApiIntegrationAnalyze"
                  }
                ]
              ]
            }
          },
          "DependsOn": "HttpApiIntegrationAnalyze"
        }
      },
      "Outputs": {
        "ServerlessDeploymentBucketName": {
          "Value": "serverless-framework-deployments-us-east-2-426aa2c2-e6a5",
          "Export": {
            "Name": "sls-compliance-analyzer-api-dev-ServerlessDeploymentBucketName"
          }
        },
        "AnalyzeLambdaFunctionQualifiedArn": {
          "Description": "Current Lambda function version",
          "Value": {
            "Ref": "AnalyzeLambdaVersion1HNTILUkHTZYj3EJVYm9G7aqtNIKMgSI9bcXdL5sdw"
          },
          "Export": {
            "Name": "sls-compliance-analyzer-api-dev-AnalyzeLambdaFunctionQualifiedArn"
          }
        },
        "HttpApiId": {
          "Description": "Id of the HTTP API",
          "Value": {
            "Ref": "HttpApi"
          },
          "Export": {
            "Name": "sls-compliance-analyzer-api-dev-HttpApiId"
          }
        },
        "HttpApiUrl": {
          "Description": "URL of the HTTP API",
          "Value": {
            "Fn::Join": [
              "",
              [
                "https://",
                {
                  "Ref": "HttpApi"
                },
                ".execute-api.",
                {
                  "Ref": "AWS::Region"
                },
                ".",
                {
                  "Ref": "AWS::URLSuffix"
                }
              ]
            ]
          },
          "Export": {
            "Name": "sls-compliance-analyzer-api-dev-HttpApiUrl"
          }
        }
      }
    }
  }
}